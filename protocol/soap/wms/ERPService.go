// Code generated by gowsdl DO NOT EDIT.

package wms

import (
	"context"
	"encoding/xml"
	"github.com/hooklift/gowsdl/soap"
	"time"
)

// against "unused imports"
var _ time.Time
var _ xml.Name

type AnyType struct {
	InnerXML string `xml:",innerxml"`
}

type AnyURI string

type NCName string

type GetPalletProperty struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetPalletProperty"`

	StrJson *string `xml:"strJson,omitempty" json:"strJson,omitempty"`
}

type GetPalletPropertyResponse struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetPalletPropertyResponse"`

	GetPalletPropertyResult *string `xml:"GetPalletPropertyResult,omitempty" json:"GetPalletPropertyResult,omitempty"`
}

type GetPalletBinding struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetPalletBinding"`

	StrJson *string `xml:"strJson,omitempty" json:"strJson,omitempty"`
}

type GetPalletBindingResponse struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetPalletBindingResponse"`

	GetPalletBindingResult *string `xml:"GetPalletBindingResult,omitempty" json:"GetPalletBindingResult,omitempty"`
}

type GetApplyLanWayIn struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetApplyLanWayIn"`

	StrJson *string `xml:"strJson,omitempty" json:"strJson,omitempty"`
}

type GetApplyLanWayInResponse struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetApplyLanWayInResponse"`

	GetApplyLanWayInResult *string `xml:"GetApplyLanWayInResult,omitempty" json:"GetApplyLanWayInResult,omitempty"`
}

type GetApplyTaskIn struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetApplyTaskIn"`

	StrJson *string `xml:"strJson,omitempty" json:"strJson,omitempty"`
}

type GetApplyTaskInResponse struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetApplyTaskInResponse"`

	GetApplyTaskInResult *string `xml:"GetApplyTaskInResult,omitempty" json:"GetApplyTaskInResult,omitempty"`
}

type GetTaskStatus struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetTaskStatus"`

	StrJson *string `xml:"strJson,omitempty" json:"strJson,omitempty"`
}

type GetTaskStatusResponse struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetTaskStatusResponse"`

	GetTaskStatusResult *string `xml:"GetTaskStatusResult,omitempty" json:"GetTaskStatusResult,omitempty"`
}

type GetPalletPorpertyDetail struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetPalletPorpertyDetail"`

	StrJson *string `xml:"strJson,omitempty" json:"strJson,omitempty"`
}

type GetPalletPorpertyDetailResponse struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetPalletPorpertyDetailResponse"`

	GetPalletPorpertyDetailResult *string `xml:"GetPalletPorpertyDetailResult,omitempty" json:"GetPalletPorpertyDetailResult,omitempty"`
}

type GetFireCellCode struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetFireCellCode"`

	StrCellCode *string `xml:"strCellCode,omitempty" json:"strCellCode,omitempty"`
}

type GetFireCellCodeResponse struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetFireCellCodeResponse"`

	GetFireCellCodeResult bool `xml:"GetFireCellCodeResult,omitempty" json:"GetFireCellCodeResult,omitempty"`

	SResult *string `xml:"sResult,omitempty" json:"sResult,omitempty"`
}

type GetMesPlanOut struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetMesPlanOut"`

	StrJson *string `xml:"strJson,omitempty" json:"strJson,omitempty"`
}

type GetMesPlanOutResponse struct {
	XMLName xml.Name `xml:"http://tempuri.org/ GetMesPlanOutResponse"`

	GetMesPlanOutResult *string `xml:"GetMesPlanOutResult,omitempty" json:"GetMesPlanOutResult,omitempty"`
}

type Char int32

type Duration *Duration

type Guid string

type Base64Binary []byte

type Boolean bool

type byte int8

type DateTime soap.XSDDateTime

type Decimal float64

type Double float64

type Float float32

type int int32

type Long int64

type Short int16

type UnsignedByte byte

type UnsignedInt uint32

type UnsignedLong uint64

type UnsignedShort uint16

type I_ErpService interface {
	GetPalletProperty(request *GetPalletProperty) (*GetPalletPropertyResponse, error)

	GetPalletPropertyContext(ctx context.Context, request *GetPalletProperty) (*GetPalletPropertyResponse, error)

	GetPalletBinding(request *GetPalletBinding) (*GetPalletBindingResponse, error)

	GetPalletBindingContext(ctx context.Context, request *GetPalletBinding) (*GetPalletBindingResponse, error)

	GetApplyLanWayIn(request *GetApplyLanWayIn) (*GetApplyLanWayInResponse, error)

	GetApplyLanWayInContext(ctx context.Context, request *GetApplyLanWayIn) (*GetApplyLanWayInResponse, error)

	GetApplyTaskIn(request *GetApplyTaskIn) (*GetApplyTaskInResponse, error)

	GetApplyTaskInContext(ctx context.Context, request *GetApplyTaskIn) (*GetApplyTaskInResponse, error)

	GetTaskStatus(request *GetTaskStatus) (*GetTaskStatusResponse, error)

	GetTaskStatusContext(ctx context.Context, request *GetTaskStatus) (*GetTaskStatusResponse, error)

	GetPalletPorpertyDetail(request *GetPalletPorpertyDetail) (*GetPalletPorpertyDetailResponse, error)

	GetPalletPorpertyDetailContext(ctx context.Context, request *GetPalletPorpertyDetail) (*GetPalletPorpertyDetailResponse, error)

	GetFireCellCode(request *GetFireCellCode) (*GetFireCellCodeResponse, error)

	GetFireCellCodeContext(ctx context.Context, request *GetFireCellCode) (*GetFireCellCodeResponse, error)

	GetMesPlanOut(request *GetMesPlanOut) (*GetMesPlanOutResponse, error)

	GetMesPlanOutContext(ctx context.Context, request *GetMesPlanOut) (*GetMesPlanOutResponse, error)
}

type i_ErpService struct {
	client *soap.Client
}

func NewI_ErpService(client *soap.Client) I_ErpService {
	return &i_ErpService{
		client: client,
	}
}

func (service *i_ErpService) GetPalletPropertyContext(ctx context.Context, request *GetPalletProperty) (*GetPalletPropertyResponse, error) {
	response := new(GetPalletPropertyResponse)
	err := service.client.CallContext(ctx, "http://tempuri.org/I_ErpService/GetPalletProperty", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *i_ErpService) GetPalletProperty(request *GetPalletProperty) (*GetPalletPropertyResponse, error) {
	return service.GetPalletPropertyContext(
		context.Background(),
		request,
	)
}

func (service *i_ErpService) GetPalletBindingContext(ctx context.Context, request *GetPalletBinding) (*GetPalletBindingResponse, error) {
	response := new(GetPalletBindingResponse)
	err := service.client.CallContext(ctx, "http://tempuri.org/I_ErpService/GetPalletBinding", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *i_ErpService) GetPalletBinding(request *GetPalletBinding) (*GetPalletBindingResponse, error) {
	return service.GetPalletBindingContext(
		context.Background(),
		request,
	)
}

func (service *i_ErpService) GetApplyLanWayInContext(ctx context.Context, request *GetApplyLanWayIn) (*GetApplyLanWayInResponse, error) {
	response := new(GetApplyLanWayInResponse)
	err := service.client.CallContext(ctx, "http://tempuri.org/I_ErpService/GetApplyLanWayIn", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *i_ErpService) GetApplyLanWayIn(request *GetApplyLanWayIn) (*GetApplyLanWayInResponse, error) {
	return service.GetApplyLanWayInContext(
		context.Background(),
		request,
	)
}

func (service *i_ErpService) GetApplyTaskInContext(ctx context.Context, request *GetApplyTaskIn) (*GetApplyTaskInResponse, error) {
	response := new(GetApplyTaskInResponse)
	err := service.client.CallContext(ctx, "http://tempuri.org/I_ErpService/GetApplyTaskIn", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *i_ErpService) GetApplyTaskIn(request *GetApplyTaskIn) (*GetApplyTaskInResponse, error) {
	return service.GetApplyTaskInContext(
		context.Background(),
		request,
	)
}

func (service *i_ErpService) GetTaskStatusContext(ctx context.Context, request *GetTaskStatus) (*GetTaskStatusResponse, error) {
	response := new(GetTaskStatusResponse)
	err := service.client.CallContext(ctx, "http://tempuri.org/I_ErpService/GetTaskStatus", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *i_ErpService) GetTaskStatus(request *GetTaskStatus) (*GetTaskStatusResponse, error) {
	return service.GetTaskStatusContext(
		context.Background(),
		request,
	)
}

func (service *i_ErpService) GetPalletPorpertyDetailContext(ctx context.Context, request *GetPalletPorpertyDetail) (*GetPalletPorpertyDetailResponse, error) {
	response := new(GetPalletPorpertyDetailResponse)
	err := service.client.CallContext(ctx, "http://tempuri.org/I_ErpService/GetPalletPorpertyDetail", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *i_ErpService) GetPalletPorpertyDetail(request *GetPalletPorpertyDetail) (*GetPalletPorpertyDetailResponse, error) {
	return service.GetPalletPorpertyDetailContext(
		context.Background(),
		request,
	)
}

func (service *i_ErpService) GetFireCellCodeContext(ctx context.Context, request *GetFireCellCode) (*GetFireCellCodeResponse, error) {
	response := new(GetFireCellCodeResponse)
	err := service.client.CallContext(ctx, "http://tempuri.org/I_ErpService/GetFireCellCode", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *i_ErpService) GetFireCellCode(request *GetFireCellCode) (*GetFireCellCodeResponse, error) {
	return service.GetFireCellCodeContext(
		context.Background(),
		request,
	)
}

func (service *i_ErpService) GetMesPlanOutContext(ctx context.Context, request *GetMesPlanOut) (*GetMesPlanOutResponse, error) {
	response := new(GetMesPlanOutResponse)
	err := service.client.CallContext(ctx, "http://tempuri.org/I_ErpService/GetMesPlanOut", request, response)
	if err != nil {
		return nil, err
	}

	return response, nil
}

func (service *i_ErpService) GetMesPlanOut(request *GetMesPlanOut) (*GetMesPlanOutResponse, error) {
	return service.GetMesPlanOutContext(
		context.Background(),
		request,
	)
}
